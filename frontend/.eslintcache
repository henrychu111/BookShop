[{"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\index.js":"1","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\App.js":"3","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\store.js":"4","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\reducers\\cartReducers.js":"5","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actions\\cartActions.js":"6","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actions\\userActions.js":"7","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\reducers\\userReducers.js":"8","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\BooksManagement.js":"9","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\BookDetails.js":"10","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Cart.js":"11","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Home.js":"12","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Register.js":"13","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Signin.js":"14","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actiontypes\\cart.js":"15","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actiontypes\\books.js":"16","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actiontypes\\users.js":"17","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actions\\bookActions.js":"18","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\reducers\\bookReducers.js":"19","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Shipping.js":"20","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\shippingComponents\\Checkout.js":"21","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Payment.js":"22","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\PlaceOrder.js":"23"},{"size":283,"mtime":1610620549714,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":8013,"mtime":1611483790167,"results":"27","hashOfConfig":"25"},{"size":1079,"mtime":1611138719326,"results":"28","hashOfConfig":"25"},{"size":978,"mtime":1611138154232,"results":"29","hashOfConfig":"25"},{"size":1263,"mtime":1611136155350,"results":"30","hashOfConfig":"25"},{"size":1175,"mtime":1611203370135,"results":"31","hashOfConfig":"25"},{"size":996,"mtime":1611112099387,"results":"32","hashOfConfig":"25"},{"size":8844,"mtime":1611481031179,"results":"33","hashOfConfig":"25"},{"size":5006,"mtime":1611315850085,"results":"34","hashOfConfig":"25"},{"size":5658,"mtime":1611315987822,"results":"35","hashOfConfig":"25"},{"size":3483,"mtime":1611484411052,"results":"36","hashOfConfig":"25"},{"size":3933,"mtime":1611315030924,"results":"37","hashOfConfig":"25"},{"size":3441,"mtime":1611314994237,"results":"38","hashOfConfig":"25"},{"size":207,"mtime":1611136060651,"results":"39","hashOfConfig":"25"},{"size":670,"mtime":1611112615008,"results":"40","hashOfConfig":"25"},{"size":356,"mtime":1611112007816,"results":"41","hashOfConfig":"25"},{"size":2590,"mtime":1611481452219,"results":"42","hashOfConfig":"25"},{"size":1982,"mtime":1611481831220,"results":"43","hashOfConfig":"25"},{"size":2428,"mtime":1611312117947,"results":"44","hashOfConfig":"25"},{"size":2503,"mtime":1611311537297,"results":"45","hashOfConfig":"25"},{"size":1731,"mtime":1611314170071,"results":"46","hashOfConfig":"25"},{"size":5832,"mtime":1611315860356,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1a057q5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\index.js",[],["104","105"],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\reportWebVitals.js",[],["106","107"],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\App.js",["108","109"],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\store.js",[],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\BooksManagement.js",["110","111","112","113","114","115"],"import { Button, Container, Typography, IconButton, TextField, CircularProgress, Box, TextareaAutosize,\r\n  Table, TableBody, TableCell, TableContainer,  TableHead, TableRow, Paper, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteBook, listBooks, saveBook } from '../actions/bookActions';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction BooksManagement(props) {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const booksList = useSelector(state => state.booksList);\r\n    const {loading, books, error} = booksList;\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const {userInfo} =  userSignin.userInfo ? userSignin : userRegister;\r\n\r\n    const bookSave = useSelector(state => state.bookSave);\r\n    const {loading: loadingSave, success: successSave, error: errorSave} = bookSave;\r\n\r\n    const bookDelete = useSelector(state => state.bookDelete);\r\n    const {loading: loadingDelete, success: successDelete, error: errorDelete} = bookDelete;\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const categories = [\"Fantasy\", \"Action\", \"Sci-Fi\"]\r\n\r\n    useEffect(() => {\r\n        if(successSave){\r\n           setModalVisible(false)\r\n        }\r\n        dispatch(listBooks());\r\n    }, [successSave, successDelete]);\r\n\r\n    \r\n\r\n\r\n    const openModal = (book) =>{\r\n        setModalVisible(true);\r\n        setId(book._id);\r\n        setName(book.name);\r\n        setAuthor(book.author);\r\n        setPrice(book.price);\r\n        setImage(book.image);\r\n        setDescription(book.description);\r\n        setCategory(book.category);\r\n        setType(book.type);\r\n        setCountInStock(book.countInStock);\r\n    }\r\n\r\n    const submitHandler =(e) =>{\r\n        e.preventDefault();\r\n        dispatch(saveBook({\r\n            _id: id,\r\n            name, price, image, author, type, \r\n            category, countInStock, description\r\n        }));\r\n    }\r\n\r\n    const deleteHandler = (book) => {\r\n        dispatch( deleteBook(book._id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo || !userInfo.isAdmin) {\r\n          props.history.push(\"/\")\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n      <>\r\n        <Container style={{paddingBottom: \"20px\"}}>\r\n          {modalVisible ? <Box className={classes.box} m={1}>\r\n          <Typography variant=\"h5\" align=\"center\">\r\n                  {id? \"Update Book\" :\" Create Book\"}\r\n                </Typography>\r\n                {loading && <CircularProgress className=\"loading\"/>}\r\n                     {error && <Typography className='error'>Save Unsuccessfully</Typography>}\r\n              <form className={classes.root} onSubmit={submitHandler}>\r\n                    <TextField id=\"name\" label=\"Name\" value= {name} variant=\"outlined\" required \r\n                            onChange = {(e) => setName(e.target.value)} fullWidth/>\r\n                    <TextField id=\"author\" label=\"Author\" value= {author} variant=\"outlined\" required \r\n                            onChange = {(e) => setAuthor(e.target.value)} fullWidth/>\r\n                    <TextField id=\"price\" type=\"number\" value= {price} label=\"Price\" variant=\"outlined\" required \r\n                            onChange = {(e) => setPrice(e.target.value)} fullWidth/>\r\n                    <TextField id=\"image\" label=\"Image\" value= {image} variant=\"outlined\" required \r\n                            onChange = {(e) => setImage(e.target.value)} fullWidth/>\r\n                    <TextField id=\"type\" label=\"Type\" value= {type} variant=\"outlined\" required \r\n                            onChange = {(e) => setType(e.target.value)} fullWidth/>\r\n                    <FormControl className={classes.formControl} variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\r\n                          <Select required style={{width: \"369px\"}} \r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\" onChange={(e) => {setCategory(e.target.value)}}\r\n                                className={classes.selectEmpty} value={category} label=\"Category\"\r\n                                >\r\n                                    {categories.map(category => \r\n                                    <MenuItem key={category} value = {category}>{category}</MenuItem>)}\r\n                                </Select></FormControl>\r\n                    {/* <TextField id=\"category\" value= {category} label=\"Category\" variant=\"outlined\" required \r\n                            onChange = {(e) => setCategory(e.target.value)} fullWidth/> */}\r\n                    <TextField id=\"In Stock\" value= {countInStock} type=\"number\" label=\"In Stock\" variant=\"outlined\" required \r\n                            onChange = {(e) => setCountInStock(e.target.value)} fullWidth/>\r\n                    <TextareaAutosize style={{width: \"364px\"}} value= {description} aria-label=\"minimum height\" rowsMin={3} placeholder=\"Description\" \r\n                    onChange = {(e) => setDescription(e.target.value)}/>\r\n                    <Button type =\"submit\" variant=\"contained\" color=\"primary\" fullWidth>{id? \"Update\" :\" Create\"}</Button>\r\n                    <Button variant=\"contained\" fullWidth onClick={() => setModalVisible(false)}>Back\r\n                            </Button>\r\n          </form></Box> :\r\n          <div><Typography style={{margin: \"20px 0px 20px\"}} variant=\"h4\">Books</Typography>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => openModal({})}>Create Book</Button>\r\n          <TableContainer className={classes.table} component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <StyledTableRow>\r\n                  <StyledTableCell>ID</StyledTableCell>\r\n                  <StyledTableCell>Name</StyledTableCell>\r\n                  <StyledTableCell>Category</StyledTableCell>\r\n                  <StyledTableCell>Type</StyledTableCell>\r\n                  <StyledTableCell>Price</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Action</StyledTableCell>\r\n                </StyledTableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {books.map((book) => (\r\n                  <StyledTableRow key={book._id}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {book._id}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell>{book.name}</StyledTableCell>\r\n                    <StyledTableCell>{book.category}</StyledTableCell>\r\n                    <StyledTableCell>{book.type}</StyledTableCell>\r\n                    <StyledTableCell>$ {book.price}</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                    <IconButton style={{marginRight: \"20px\"}} onClick ={() => openModal(book)}><EditIcon /></IconButton>\r\n                    <IconButton onClick = {() => deleteHandler(book)}><DeleteIcon /></IconButton>\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer></div> }\r\n        </Container>\r\n      </>\r\n    );  \r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    },table: {\r\n    marginTop: \"20px\",\r\nformControl: {\r\n  margin: theme.spacing(1),\r\n  minWidth: 120,\r\n},\r\nselectEmpty: {\r\n  marginTop: theme.spacing(2),\r\n},\r\n  },\r\n},box: {\r\n  border: \"1px solid grey\",\r\n  minWidth: \"360px\",\r\n  width: \"30%\",\r\n  margin: \"auto\",\r\n  borderRadius: \"5px\",\r\n  padding: \"20px 35px 20px 20px\",\r\n  marginTop: \"30px\"\r\n},\r\ntable: {\r\n  marginTop: \"20px\",\r\n\r\n},\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#263238\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  }\r\n}))(TableRow);\r\n\r\nexport default BooksManagement;\r\n","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\BookDetails.js",["116"],"import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { detailsBook } from '../actions/bookActions';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { Typography,CircularProgress, Grid, Box, Select, MenuItem, Button, InputLabel, FormControl } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction BookDetails(props) {\r\n    const [qty, setQty] = useState(1)\r\n    const bookDetails = useSelector(state => state.bookDetails);\r\n    const { book, loading, error }= bookDetails;\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsBook(props.match.params.id));\r\n    }, []);\r\n\r\n    const handleAddToCart = () =>{\r\n        props.history.push(\"/cart/\" + props.match.params.id + \"?qty=\" + qty)\r\n    }\r\n\r\n    return (\r\n        <div style={{margin: \"20px\"}}>\r\n            <Link to=\"/\"><Typography>&lt; Back to result</Typography></Link>\r\n            {loading ? <CircularProgress className=\"loading\"/> :\r\n              error ? <Typography className='error'>Loading Error</Typography> :\r\n              <Grid className={classes.grid} container spacing={1}>\r\n                  <Grid item xs={12} sm={6} md={6} lg={4}><img style={{width: \"80%\"}} src={\"/images/\" + book.image} alt=\"book\"></img></Grid>\r\n                  <Grid item xs={12} sm={6} md={6} lg={4}>\r\n                      <Typography variant=\"h4\" className={classes.title}>{book.name}</Typography>\r\n                      <Typography color=\"textSecondary\" className={classes.author}>\r\n                            {book.author}\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" className={classes.type}>\r\n                            {book.type}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" className={classes.type}>\r\n                            $ {book.price}\r\n                        </Typography>\r\n                        <Tooltip className=\"tooltip\" title={book.rating + \" stars\"}>\r\n                            <span><Rating size=\"small\" name=\"half-rating-read\" defaultValue={book.rating} precision={0.1} readOnly /></span></Tooltip> \r\n                        <span style={{fontFamily:\"Manrope\", fontSize:\"9pt\", position:\"relative\", \r\n                                    bottom: \"3.5px\", left: \"5px\"}}>({book.reviews} reviews)</span>\r\n                        <br/><br/>\r\n                        <Typography className={classes.type}>\r\n                           Description: {book.description}\r\n                        </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={6} lg={4}>\r\n                      <Box className={classes.box}>\r\n                          <Typography className={classes.addToCart}>Price: ${book.price}</Typography>\r\n                          <Typography className={classes.addToCart}>Status: {book.countInStock > 0? \"In Stock\": \"Unavailable\"}</Typography>\r\n                          <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"demo-simple-select-label\">Quantity</InputLabel><Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={qty} onChange={(e) => {setQty(e.target.value)}}\r\n                                className={classes.selectEmpty}\r\n                                >\r\n                                    {[...Array(book.countInStock).keys()].map(x => \r\n                                    <MenuItem key={x+1} value = {x+1}>{x+1}</MenuItem>)}\r\n                                </Select></FormControl>\r\n                            <Button disabled={book.countInStock === 0} \r\n                                className={classes.addToCartBtn} variant=\"contained\" \r\n                                color=\"primary\"\r\n                                onClick={handleAddToCart}>Add To Cart</Button>\r\n                      </Box>\r\n                  </Grid>\r\n              </Grid>\r\n              }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: '#00897b'\r\n    },\r\n    grid: {\r\n        margin: \"10px\",\r\n    },\r\n    author: {\r\n        fontSize: \".8rem\"\r\n    },\r\n    type: {\r\n        marginBottom: \"5px\"\r\n    },\r\n    box: {\r\n        border: \"1px solid grey\",\r\n        minWidth: \"250px\",\r\n        width: \"30%\",\r\n        borderRadius: \"5px\",\r\n        padding: \"20px 35px 20px 20px\",\r\n        backgroundColor: \"#F5F5F5\"\r\n    },\r\n    addToCart: {\r\n        margin: \"10px\"\r\n    },\r\n    addToCartBtn: {\r\n        marginTop: \"20px\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }));\r\n\r\nexport default BookDetails;\r\n","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Cart.js",["117","118","119"],"import { Container, Typography, Table, TableHead, IconButton,\r\n    TableRow, TableCell, Paper, TableBody, TableContainer, Select, MenuItem, Grid, Box, Button, InputLabel } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nfunction Cart(props){\r\n\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    const {cartItems} = cart;\r\n    const classes = useStyles();\r\n\r\n    const bookId = props.match.params.id;\r\n    const qty = props.location.search?  Number(props.location.search.split(\"=\")[1]):1;\r\n    const dispatch = useDispatch();\r\n    const removeFromCartHandler = (bookId) => {\r\n        dispatch(removeFromCart(bookId))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(bookId) {\r\n            dispatch(addToCart(bookId, qty));\r\n        }\r\n    }, []);\r\n\r\n    const checkoutHandler = () => {\r\n        props.history.push(\"/signin?redirect=shipping\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Typography style={{margin: \"20px 0px 20px\"}} variant=\"h4\">Shopping Cart</Typography>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={8} >\r\n                        {cartItems.length === 0 ? <Typography>Cart is Empty</Typography> : \r\n                            <TableContainer className={classes.table} component={Paper}>\r\n                                <Table aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell align=\"right\">Price</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {cartItems.map((item) => (\r\n                                    <TableRow key={item.book}>\r\n                                        <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                                            <img style={{width: \"50px\"}} src={\"/images/\" + item.image}></img>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.cell}><Link to={'/book/' + item.book}>{item.name}</Link></TableCell>\r\n                                        <TableCell className={classes.cell}>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Quantity</InputLabel>\r\n                                        <Select \r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                value={item.qty} onChange={(e) => dispatch(addToCart(item.book, e.target.value))}\r\n                                                >\r\n                                                    {[...Array(item.countInStock).keys()].map(x => \r\n                                                    <MenuItem key={x+1} value = {x+1}>{x+1}</MenuItem>)}\r\n                                                </Select>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.cell}><IconButton onClick={() => removeFromCartHandler(item.book)}><DeleteIcon /></IconButton></TableCell>\r\n                                        <TableCell className={classes.cell} align=\"right\">\r\n                                            <Typography>$ {item.price}</Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                                </Table>\r\n                            </TableContainer>}\r\n                    </Grid>\r\n                    <Grid item sm={4}>\r\n                    <Box className={classes.box}>\r\n                        <Typography variant=\"h5\">\r\n                        Subtotal ( {cartItems.reduce((a, c) => Number(a) + Number(c.qty), 0)} items)\r\n                        :\r\n                        <br></br>\r\n                        $ {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\r\n                    </Typography>\r\n                    <Button style={{marginTop: \"20px\"}} onClick={checkoutHandler} variant=\"contained\" color=\"primary\" disabled= {cartItems.length === 0}>\r\n                        Proceed to Checkout\r\n                    </Button>\r\n                      </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1)\r\n      },table: {\r\n      marginTop: \"20px\",\r\n    },\r\n  },\r\n  table: {\r\n    marginTop: \"20px\",\r\n  },\r\n  cell: {\r\n      background: \"white\"\r\n  },\r\n    box: {\r\n        border: \"1px solid grey\",\r\n        minWidth: \"250px\",\r\n        width: \"30%\",\r\n        margin: \"auto\",\r\n        borderRadius: \"5px\",\r\n        padding: \"20px 35px 20px 20px\",\r\n        marginTop: \"30px\",\r\n        backgroundColor: \"#F5F5F5\"\r\n    }\r\n  }));\r\n\r\nexport default Cart","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Home.js",["120"],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Register.js",["121","122"],"import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { register } from '../actions/userActions';\r\nimport { Box, Typography, TextField, Button,CircularProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Register(props) {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('')\r\n    const [rePassword, setRePassword] = useState('')\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const {loading, error} = userRegister;\r\n    const {userInfo} =  userSignin.userInfo ? userSignin : userRegister;\r\n    const dispatch = useDispatch();\r\n    const redirect = props.location.search?props.location.search.split('=')[1]: '/';\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            props.history.push(redirect)\r\n        }\r\n    }, [userInfo]);\r\n\r\n    const submitHandler =(e) =>{\r\n        e.preventDefault();\r\n        dispatch(register(name, email, password));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/\"><Typography variant=\"h6\" className={classes.logo}>\r\n                BookShop\r\n            </Typography></Link>\r\n            <Box className={classes.box} m={1}>\r\n                <Typography variant=\"h6\" className = {classes.signInHeader}>\r\n                    Register\r\n                </Typography>\r\n                {loading && <CircularProgress className=\"loading\"/>}\r\n                     {error && <Typography className='error'>Register unsuccessfully</Typography>}\r\n                <form className={classes.root} onSubmit={submitHandler}>\r\n                    <TextField id=\"name\" label=\"Name\" variant=\"outlined\" required \r\n                            onChange = {(e) => setName(e.target.value)} fullWidth/>        \r\n                    <TextField id=\"email\" type=\"email\" label=\"Email\" variant=\"outlined\" required \r\n                            onChange = {(e) => setEmail(e.target.value)} fullWidth/>\r\n                    <TextField id=\"password\" type=\"password\" label=\"Password\" variant=\"outlined\" fullWidth\r\n                            onChange ={(e) => setPassword(e.target.value)} required/>\r\n                    <TextField id=\"rePassword\" type=\"password\" label=\"Re-enter Password\" variant=\"outlined\" fullWidth\r\n                            onChange ={(e) => setRePassword(e.target.value)} required/>\r\n                    <Button type =\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Register</Button>\r\n                    <hr/><Typography className = {classes.newTo}>\r\n                    Already have an account?\r\n                    </Typography>\r\n                    <Link to={redirect === '/'? 'signin': 'signin?redirect=' + redirect}>\r\n                        <Button className= {classes.register} variant=\"contained\" fullWidth>Sign in\r\n                        </Button>\r\n                    </Link>    \r\n                </form>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n          margin: theme.spacing(1)\r\n        },\r\n    },\r\n    logo: {\r\n        fontFamily: \"Pacifico\",\r\n        fontSize: \"2.5rem\",\r\n        textAlign: \"center\",\r\n        marginTop: \"20px\",\r\n        color: \"rgb(34, 26, 26)\"\r\n    },\r\n    signInHeader: {\r\n        fontSize: \"2rem\",\r\n        paddingLeft: \"5px\"\r\n    },\r\n    box: {\r\n        border: \"1px solid grey\",\r\n        minWidth: \"360px\",\r\n        width: \"30%\",\r\n        margin: \"auto\",\r\n        borderRadius: \"5px\",\r\n        padding: \"20px 35px 20px 20px\",\r\n        marginTop: \"30px\"\r\n    },\r\n    newTo: {\r\n        fontSize: \".80rem\",\r\n        textAlign: \"center\",\r\n        marginBottom: \"10px\"\r\n    }\r\n}));\r\n\r\nexport default Register;\r\n\r\n","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Signin.js",["123"],"import { Box, Typography, TextField, Button, CircularProgress } from '@material-ui/core';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { signin } from '../actions/userActions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Signin(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('')\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const {userInfo} =  userSignin.userInfo ? userSignin : userRegister;\r\n    const {loading, error} = userSignin;const dispatch = useDispatch();\r\n    const redirect = props.location.search?props.location.search.split('=')[1]: '/';\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            props.history.push(redirect)\r\n        }\r\n    }, [userInfo]);\r\n\r\n    const submitHandler =(e) =>{\r\n        e.preventDefault();\r\n        dispatch(signin(email, password));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/\"><Typography variant=\"h6\" className={classes.logo}>\r\n                BookShop\r\n            </Typography></Link>\r\n            <Box className={classes.box} m={1}>\r\n                <Typography variant=\"h6\" className = {classes.signInHeader}>\r\n                    Sign-In \r\n                </Typography>\r\n                {loading && <CircularProgress className=\"loading\"/>}\r\n                     {error && <Typography className='error'>Invalid Username or Password</Typography>}\r\n                <form className={classes.root} onSubmit={submitHandler}>\r\n                    <TextField id=\"email\" label=\"Email\" type=\"email\" variant=\"outlined\" required \r\n                            onChange = {(e) => setEmail(e.target.value)} fullWidth/>\r\n                    <TextField id=\"password\" label=\"Password\" variant=\"outlined\" fullWidth type=\"password\"\r\n                            onChange ={(e) => setPassword(e.target.value)} required/>\r\n                    <Button type =\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Sign in</Button>\r\n                    <hr/><Typography className = {classes.newTo}>\r\n                    New to BookShop?\r\n                    </Typography>\r\n                    <Link to={redirect === '/'? 'register': 'register?redirect=' + redirect}>\r\n                            <Button className= {classes.register} variant=\"contained\" fullWidth>Register\r\n                            </Button>\r\n                    </Link>    \r\n                </form>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n          margin: theme.spacing(1)\r\n        },\r\n    },\r\n    logo: {\r\n        fontFamily: \"Pacifico\",\r\n        fontSize: \"2.5rem\",\r\n        textAlign: \"center\",\r\n        marginTop: \"20px\",\r\n        color: \"rgb(34, 26, 26)\"\r\n    },\r\n    signInHeader: {\r\n        fontSize: \"2rem\",\r\n        paddingLeft: \"5px\"\r\n    },\r\n    box: {\r\n        border: \"1px solid grey\",\r\n        minWidth: \"360px\",\r\n        width: \"30%\",\r\n        margin: \"auto\",\r\n        borderRadius: \"5px\",\r\n        padding: \"20px 35px 20px 20px\",\r\n        marginTop: \"30px\"\r\n    },\r\n    newTo: {\r\n        fontSize: \".80rem\",\r\n        textAlign: \"center\",\r\n        marginBottom: \"10px\"\r\n    }\r\n}));\r\n\r\nexport default Signin;\r\n\r\n","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actiontypes\\cart.js",[],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actiontypes\\books.js",[],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actiontypes\\users.js",[],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\actions\\bookActions.js",[],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\reducers\\bookReducers.js",[],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Shipping.js",["124","125","126","127"],"import { TextField, Box, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { saveShipping } from '../actions/cartActions';\r\nimport Checkout from '../shippingComponents/Checkout';\r\n\r\nfunction Shipping(props) {\r\n    const [address, setAddress] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [postalCode, setPostalCode] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [activeStep, setActiveStep] = useState(1)\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const submitHandler =(e) =>{\r\n        e.preventDefault();\r\n        dispatch(saveShipping({address, city, postalCode, country}));\r\n        props.history.push('/payment');\r\n    }\r\n\r\n    return <>\r\n        <Checkout activeStep={activeStep}></Checkout>\r\n        <Box className={classes.box} m={1}>\r\n          <Typography variant=\"h5\" align=\"center\">\r\n                Shipping\r\n                </Typography>\r\n              <form className={classes.root} onSubmit={submitHandler}>\r\n                    <TextField id=\"address\" label=\"Address\" variant=\"outlined\" required \r\n                            onChange = {(e) => setAddress(e.target.value)} fullWidth/>\r\n                    <TextField id=\"city\" label=\"City\" variant=\"outlined\" required \r\n                            onChange = {(e) => setCity(e.target.value)} fullWidth/>\r\n                    <TextField id=\"postalcode\" label=\"Postal Code\" variant=\"outlined\" required \r\n                            onChange = {(e) => setPostalCode(e.target.value)} fullWidth/>\r\n                    <TextField id=\"country\" label=\"Country\" variant=\"outlined\" required \r\n                            onChange = {(e) => setCountry(e.target.value)} fullWidth/>\r\n                    <Button type =\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Continue</Button>\r\n          </form></Box>\r\n    </>\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1)\r\n      },table: {\r\n      marginTop: \"20px\",\r\n    },\r\n  },box: {\r\n    border: \"1px solid grey\",\r\n    minWidth: \"360px\",\r\n    width: \"30%\",\r\n    margin: \"auto\",\r\n    borderRadius: \"5px\",\r\n    padding: \"20px 35px 20px 20px\",\r\n    marginTop: \"30px\"\r\n  },\r\n  }));\r\n\r\nexport default Shipping;","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\shippingComponents\\Checkout.js",[],"C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\Payment.js",["128","129","130","131"],"import { Box, Typography, makeStyles, Button, Radio, FormControlLabel } from '@material-ui/core';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { savePayment } from '../actions/cartActions';\r\nimport Checkout from '../shippingComponents/Checkout';\r\n\r\nfunction Payment(props) {\r\n    const [payment, setPayment] = useState('');\r\n    const dispatch = useDispatch();\r\n    const [activeStep, setActiveStep] = useState(2)\r\n    const classes = useStyles();\r\n\r\n    const submitHandler =(e) =>{\r\n        e.preventDefault();\r\n        dispatch(savePayment(payment));\r\n        props.history.push('/placeorder');\r\n    }\r\n\r\n    return <div>\r\n        <Checkout activeStep={activeStep}></Checkout>\r\n        <Box className={classes.box} m={1}>\r\n          <Typography variant=\"h5\" align=\"center\">\r\n                Payment\r\n                </Typography>\r\n              <form className={classes.root} onSubmit={submitHandler}>\r\n                    <FormControlLabel value=\"female\" control={<Radio value='Paypal' color = \"primary\" onChange ={(e) => setPayment(e.target.value)}/>} label=\"Paypal\" />\r\n                    <Button type =\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Continue</Button>\r\n          </form></Box>\r\n    </div>\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1)\r\n      },table: {\r\n      marginTop: \"20px\",\r\n    },\r\n  },box: {\r\n    border: \"1px solid grey\",\r\n    minWidth: \"360px\",\r\n    width: \"30%\",\r\n    margin: \"auto\",\r\n    borderRadius: \"5px\",\r\n    padding: \"20px 35px 20px 20px\",\r\n    marginTop: \"30px\"\r\n  },\r\n  }));\r\n\r\n\r\nexport default Payment;","C:\\Users\\henry\\Desktop\\BCIT Documents\\Henry's Website\\BookShop\\frontend\\src\\components\\PlaceOrder.js",["132","133","134","135","136"],"import { Container, Grid, Table, TableBody, TableCell, Paper, Box, makeStyles, Button,\r\n    TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport Checkout from '../shippingComponents/Checkout';\r\n\r\nfunction PlaceOrder(props){\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const [activeStep, setActiveStep] = useState(3)\r\n    const classes = useStyles();\r\n\r\n    const {cartItems, shipping, payment} = cart;\r\n    if(!shipping.address){\r\n        props.history.push('/shipping');\r\n    }else if(!payment){\r\n        props.history.push('/payment');\r\n    }\r\n    \r\n    const itemsPrice = cartItems.reduce((a,c) => a + c.price*c.qty, 0);\r\n    const shippingPrice = (itemsPrice > 100 ? 0: 10);\r\n    const taxPrice = (0.12 * itemsPrice);\r\n    const totalPrice = itemsPrice + shippingPrice + taxPrice;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const placeOrderHandler = () => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    return <>\r\n        <Checkout activeStep={activeStep}></Checkout>\r\n        <Container>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={8}>\r\n                    <Typography style={{margin: \"20px 0px 20px\"}} variant=\"h4\">Shipping</Typography>\r\n                    <Typography> {shipping.address}, {shipping.city},\r\n                        {shipping.postalCode}, {shipping.country}</Typography>\r\n                    <Typography style={{margin: \"20px 0px 20px\"}} variant=\"h4\">Shopping Cart</Typography>\r\n                        {cartItems.length === 0 ? <Typography>Cart is Empty</Typography> : \r\n                            <TableContainer className={classes.table} component={Paper}>\r\n                                <Table aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell align=\"right\">Price</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {cartItems.map((item) => (\r\n                                    <TableRow key={item.book}>\r\n                                        <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                                            <img style={{width: \"50px\"}} src={\"/images/\" + item.image}></img>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.cell}><Link to={'/book/' + item.book}>{item.name}</Link></TableCell>\r\n                                        <TableCell className={classes.cell}>\r\n                                        <Typography className={classes.addToCart}>Quantity: {item.qty}</Typography> \r\n                                        </TableCell>\r\n                                        <TableCell className={classes.cell} align=\"right\">\r\n                                            <Typography>$ {item.price}</Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                                </Table>\r\n                            </TableContainer>}\r\n                    </Grid>\r\n                    <Grid item sm={4}>\r\n                    <Typography style={{margin: \"20px 50px 20px\"}} variant=\"h4\">Payment</Typography>\r\n                    <Typography style={{margin: \"20px 50px 20px\"}}>{cart.payment}</Typography>\r\n                    <Box className={classes.box}>\r\n                        <Typography variant=\"h5\">\r\n                            Order Summary \r\n                        </Typography>\r\n                        <Typography variant=\"h6\">\r\n                            Items <span style={{float: \"right\"}}>${itemsPrice.toFixed(2)}</span>\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">\r\n                            Shipping <span style={{float: \"right\"}}>${shippingPrice.toFixed(2)}</span>\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">\r\n                            Tax <span style={{float: \"right\"}}>${taxPrice.toFixed(2)}</span>\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">\r\n                            Total <span style={{float: \"right\"}}>${totalPrice.toFixed(2)}</span>\r\n                        </Typography>\r\n                    <Button style={{marginTop: \"20px\"}} onClick={placeOrderHandler} variant=\"contained\" color=\"primary\" disabled= {cartItems.length === 0}>\r\n                        Place Order\r\n                    </Button>\r\n                      </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n    </>\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1)\r\n      },table: {\r\n      marginTop: \"20px\",\r\n    },\r\n  },\r\n  table: {\r\n    marginTop: \"20px\",\r\n  },\r\n  cell: {\r\n      background: \"white\"\r\n  },\r\n    box: {\r\n        border: \"1px solid grey\",\r\n        minWidth: \"350px\",\r\n        width: \"30%\",\r\n        margin: \"50px\",\r\n        borderRadius: \"5px\",\r\n        padding: \"20px 35px 20px 20px\",\r\n        marginTop: \"30px\",\r\n        backgroundColor: \"#F5F5F5\"\r\n    }\r\n  }));\r\n\r\nexport default PlaceOrder;",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"137","replacedBy":"141"},{"ruleId":"139","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":86,"column":59,"nodeType":"149","endLine":86,"endColumn":75},{"ruleId":"143","severity":1,"message":"150","line":28,"column":21,"nodeType":"145","messageId":"146","endLine":28,"endColumn":32},{"ruleId":"143","severity":1,"message":"151","line":28,"column":63,"nodeType":"145","messageId":"146","endLine":28,"endColumn":72},{"ruleId":"143","severity":1,"message":"152","line":31,"column":21,"nodeType":"145","messageId":"146","endLine":31,"endColumn":34},{"ruleId":"143","severity":1,"message":"153","line":31,"column":67,"nodeType":"145","messageId":"146","endLine":31,"endColumn":78},{"ruleId":"154","severity":1,"message":"155","line":41,"column":8,"nodeType":"156","endLine":41,"endColumn":36,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"158","line":76,"column":8,"nodeType":"156","endLine":76,"endColumn":10,"suggestions":"159"},{"ruleId":"154","severity":1,"message":"160","line":19,"column":8,"nodeType":"156","endLine":19,"endColumn":10,"suggestions":"161"},{"ruleId":"143","severity":1,"message":"162","line":7,"column":22,"nodeType":"145","messageId":"146","endLine":7,"endColumn":32},{"ruleId":"154","severity":1,"message":"163","line":28,"column":8,"nodeType":"156","endLine":28,"endColumn":10,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":56,"column":45,"nodeType":"167","endLine":56,"endColumn":104},{"ruleId":"154","severity":1,"message":"155","line":21,"column":8,"nodeType":"156","endLine":21,"endColumn":10,"suggestions":"168"},{"ruleId":"143","severity":1,"message":"169","line":12,"column":12,"nodeType":"145","messageId":"146","endLine":12,"endColumn":22},{"ruleId":"154","severity":1,"message":"170","line":24,"column":8,"nodeType":"156","endLine":24,"endColumn":18,"suggestions":"171"},{"ruleId":"154","severity":1,"message":"170","line":22,"column":8,"nodeType":"156","endLine":22,"endColumn":18,"suggestions":"172"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":16,"nodeType":"145","messageId":"146","endLine":2,"endColumn":25},{"ruleId":"143","severity":1,"message":"173","line":3,"column":23,"nodeType":"145","messageId":"146","endLine":3,"endColumn":34},{"ruleId":"143","severity":1,"message":"174","line":4,"column":9,"nodeType":"145","messageId":"146","endLine":4,"endColumn":13},{"ruleId":"143","severity":1,"message":"175","line":13,"column":24,"nodeType":"145","messageId":"146","endLine":13,"endColumn":37},{"ruleId":"143","severity":1,"message":"144","line":2,"column":16,"nodeType":"145","messageId":"146","endLine":2,"endColumn":25},{"ruleId":"143","severity":1,"message":"173","line":3,"column":23,"nodeType":"145","messageId":"146","endLine":3,"endColumn":34},{"ruleId":"143","severity":1,"message":"174","line":4,"column":9,"nodeType":"145","messageId":"146","endLine":4,"endColumn":13},{"ruleId":"143","severity":1,"message":"175","line":11,"column":24,"nodeType":"145","messageId":"146","endLine":11,"endColumn":37},{"ruleId":"143","severity":1,"message":"176","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":19},{"ruleId":"143","severity":1,"message":"177","line":6,"column":21,"nodeType":"145","messageId":"146","endLine":6,"endColumn":35},{"ruleId":"143","severity":1,"message":"175","line":12,"column":24,"nodeType":"145","messageId":"146","endLine":12,"endColumn":37},{"ruleId":"143","severity":1,"message":"178","line":27,"column":11,"nodeType":"145","messageId":"146","endLine":27,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":60,"column":45,"nodeType":"167","endLine":60,"endColumn":104},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],["179"],["180"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'loadingSave' is assigned a value but never used.","'errorSave' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has missing dependencies: 'props.history' and 'userInfo'. Either include them or remove the dependency array.",["182"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["183"],"'withStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'bookId', 'dispatch', and 'qty'. Either include them or remove the dependency array.",["184"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["185"],"'rePassword' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["186"],["187"],"'useSelector' is defined but never used.","'Link' is defined but never used.","'setActiveStep' is assigned a value but never used.","'addToCart' is defined but never used.","'removeFromCart' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"198","fix":"200"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"201","text":"202"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"203","text":"204"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"205","text":"206"},"Update the dependencies array to be: [bookId, dispatch, qty]",{"range":"207","text":"208"},"Update the dependencies array to be: [dispatch]",{"range":"209","text":"210"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"211","text":"212"},{"range":"213","text":"212"},[2020,2048],"[successSave, successDelete, dispatch]",[2889,2891],"[props.history, userInfo]",[829,831],"[dispatch, props.match.params.id]",[1053,1055],"[bookId, dispatch, qty]",[803,805],"[dispatch]",[1080,1090],"[props.history, redirect, userInfo]",[974,984]]